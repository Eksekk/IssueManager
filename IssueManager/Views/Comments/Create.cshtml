@model IssueManager.Models.Comment

@{
    ViewData["Title"] = "Add comment";
}

<h1>Add comment</h1>

<h4>Comment</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="issueId" value="@ViewData["issueId"]" />
            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <!-- choose issue combobox -->
            <!--
            ViewBag["IssueId"] = new SelectList(_context.Issue, "Id", "Title", issueId); -->
            <!-- label should be "Issue name" -->
            <div class="form-group">
                <label class="control-label">Issue name</label>
                @Html.DropDownListFor(model => model.Issue.Id, new SelectList(ViewBag.IssueId, "Value", "Text"), string.Empty, new { @class = "form-control" })
				<span asp-validation-for="Issue.Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
