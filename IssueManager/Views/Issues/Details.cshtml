@model IssueManager.Models.Issue

@{
    ViewData["Title"] = "Issue details";
}

<h1>Issue details</h1>

<div>
    <h4>Issue</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.project.Name)
        </dt>
        <dd class="col-sm-10">
			<a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.project.Id">@Html.DisplayFor(model => model.project.Name)</a>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.SubmitDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.SubmitDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastUpdateDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastUpdateDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            <!-- this workaround is needed, because you can't call a method in a lambda expression -->
            @{
                // kinda weird way to access model item's property with @
                var str = Issue.getIssueStatusEnumText((IssueStatus)@Model.Status);
            }
            @Html.DisplayFor(modelItem => str)
        </dd>
        @if (@Model.Status == IssueStatus.CLOSED)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CloseDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CloseDate)
            </dd>
        }
        <!-- comments list -->
        <dt class="col-sm-2">
			Comments
            </dt>
		<dd class="col-sm-10">
            <table>
                <thead>
					<tr>
						<th>@Html.DisplayNameFor(model => model.Comments[0].Author)</th>
						<th>@Html.DisplayNameFor(model => model.Comments[0].Content)</th>
						<th>@Html.DisplayNameFor(model => model.Comments[0].SubmitDate)</th>
					</tr>
				</thead>
				<tbody>
					@foreach (Comment comment in Model.Comments)
					{
                        string content = comment.Content;
                        bool longerThan100 = content.Length > 100;
                        content = longerThan100 ? content.Substring(0, 100) + "..." : content;
						<tr>
							<td>@Html.DisplayFor(modelItem => comment.Author)</td>
							<td>@Html.ActionLink(comment.Content, "Details", "Comments", new { id = comment.Id }, null)</td>
							<td>@Html.DisplayFor(modelItem => comment.SubmitDate)</td>
						</tr>
					}
				</tbody>
            </table>

		</dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
